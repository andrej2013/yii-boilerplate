<?php
/**
 * Created by PhpStorm.
 * User: ntesic
 * Date: 2/19/19
 * Time: 11:53 PM
 */

namespace andrej2013\yiiboilerplate\templates\crud\providers;

use andrej2013\yiiboilerplate\templates\crud\Generator;
use andrej2013\yiiboilerplate\templates\crud\providers\base\Provider;
use yii\db\ActiveRecord;

class CheckboxProvider extends Provider
{
    public $type = Generator::TYPE_CHECKBOX;

    public function activeField($attribute)
    {
        if ($this->condition($attribute)) {
            $options = [
                'id'      => "Html::getInputId(\$model, '$attribute') . \$caller_id",
                'style'   => "\bookin\aws\checkbox\AwesomeCheckbox::STYLE_PRIMARY",
                'type'    => "\bookin\aws\checkbox\AwesomeCheckbox::TYPE_CHECKBOX",
                'options' => [
                    'label' => "' '",
                ],
            ];
            $options = $this->generator->var_export54($options);
            $method = __METHOD__;
            $html = <<<HTML

/*Generated by $method*/
\$form->field(
    \$model,
    '{$attribute}',
    [
        'selectors' => [
            'input' => '#'.Html::getInputId(\$model, '$attribute') . \$caller_id,
        ]
    ]
    )
     ->widget(\bookin\aws\checkbox\AwesomeCheckbox::class, $options
     )
    ->hint(\$model->getAttributeHint('$attribute'));
HTML;
            return $html;
        }
    }

    public function columnFormat($attribute, ActiveRecord $model)
    {
        if ($this->condition($attribute)) {
            $options = [
                'attribute'  => "'$attribute'",
                'class'      => "'\kartik\grid\BooleanColumn'",
                'trueLabel'  => "\Yii::t('app', 'Yes')",
                'falseLabel' => "\Yii::t('app', 'No')",
                'content'    => "function (\$model) {
                return \$model->$attribute == 1 ? Yii::t('app', 'Yes') : Yii::t('app', 'No');
            }",

            ];
            $html = $this->generator->var_export54($options);
            $method = __METHOD__;
            return <<<HTML
/*Generated by $method*/
$html
HTML;
        }
    }
    
    public function attributeFormat($attribute)
    {
        if ($this->condition($attribute)) {
            $method = __METHOD__;
            return "/*Generated by $method*/
            '$attribute:boolean'";
        }
    }
}