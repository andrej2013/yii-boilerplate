<?php
/**
 * Created by PhpStorm.
 * User: ntesic
 * Date: 2/21/19
 * Time: 9:09 AM
 */

namespace andrej2013\yiiboilerplate\templates\crud\providers;

use andrej2013\yiiboilerplate\templates\crud\Generator;
use andrej2013\yiiboilerplate\templates\crud\providers\base\Provider;
use andrej2013\yiiboilerplate\widget\DepDrop;
use yii\helpers\ArrayHelper;

class DependProvider extends Provider
{
    public $type = Generator::TYPE_DEPEND;


    public function activeField($attribute)
    {
        if ($this->condition($attribute)) {
            $modelGenerator = new \andrej2013\yiiboilerplate\templates\model\Generator();
            $column = $this->generator->getColumnByAttribute($attribute);
            $comment = $this->generator->getComment($column);
            $link = $comment->link;
            $relation = $comment->relation;

            $relation_for_route = $this->generator->getRelationByColumn($this->generator->modelClass, $column);
            $route = '/' . $this->generator->createRelationRoute($relation_for_route, '');
            $primary_key = $relation_for_route->primaryModel::primaryKey()[0];
            $model = $relation_for_route->modelClass;
            $shortName = (new \ReflectionClass($model))->getShortName();

            $linkColumn = $this->generator->getColumnByAttribute($link);
            $currentModel = $this->generator->getRelationByColumn($this->generator->modelClass, $column);
            $dependModel = $this->generator->getRelationByColumn($currentModel->primaryModel, $linkColumn);
            $depending_route = $this->generator->createRelationRoute($dependModel, 'depending');

            $options = [
                'type'           => "\andrej2013\yiiboilerplate\widget\DepDrop::TYPE_SELECT2",
                'data'           => "\$model->isNewRecord ? [] : ArrayHelper::map({$currentModel->modelClass}::find()->andWhere(['$link' => \$model->$link])->all(), 'id', 'toString')",
                'options'        => [
                    'placeholder' => $this->generator->generateString('Select a value...'),
                    'id'          => "'$attribute' . (\$is_popup ? '_from' . \$caller_id : '')",
                ],
                'select2Options' => [
                    'pluginOptions' => [
                        'allowClear' => $column->allowNull ? true : false,
                    ],
                    'addon'         => [
                        'append' => [
                            'content'  => [
                                "RelatedForms::widget(" . $this->generator->var_export54([
                                    'is_popup'          => "\$is_popup",
                                    'relatedController' => "'$route'",
                                    'selector'          => "'$attribute' . (\$is_popup ? '_popup_' . \$caller_id : '')",
                                    'primaryKey'        => "'$primary_key'",
                                    'modelName'         => $this->generator->generateString($shortName),
                                    'depend'            => true,
                                    'dependLink'        => "'$link'",
                                    'dependField'       => "'$link' . (\$is_popup ? '_from' . \$caller_id : '')",
                                    'formName'          => "'$shortName'",
                                ]) . ")",
                            ],
                            'asButton' => true,
                        ],
                    ],
                ],
                'pluginOptions'  => [
                    'depends' => ["'$link' . (\$is_popup ? '_from' . \$caller_id : '')"],
                    'url'     => "Url::to(['$depending_route', 'relation' => '$relation'])",
                ],
            ];
            $options = $this->generator->var_export54($options);
            $hidden_options = [
                'id'          => "'$attribute' . (\$is_popup ? '_from' . \$caller_id : '')",
            ];
            $hidden_options = $this->generator->var_export54($hidden_options);
            $method = __METHOD__;
            $html = <<<HTML
/*Generated by $method*/
(isset(\$hide) && \$hide === '$attribute') ? 
Html::activeHiddenInput(
    \$model,
    '$attribute',
    $hidden_options
)
:\$form->field(\$model, '$attribute')
        ->widget(\andrej2013\yiiboilerplate\widget\DepDrop::class, $options);
HTML;
            return $html;
        }
    }
}