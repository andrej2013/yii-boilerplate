<?php
/**
 * Created by PhpStorm.
 * User: ntesic
 * Date: 2/20/19
 * Time: 8:17 PM
 */

namespace andrej2013\yiiboilerplate\templates\crud\providers;

use andrej2013\yiiboilerplate\templates\crud\Generator;
use andrej2013\yiiboilerplate\templates\crud\providers\base\Provider;

class QrCodeProvider extends Provider
{
    public $type = Generator::TYPE_QR_CODE;

    public function activeField($attribute)
    {
        if ($this->condition($attribute)) {
            $options = [
                'id' => "Html::getInputId(\$model, '$attribute') . \$caller_id",
            ];
            $options = $this->generator->var_export54($options);
            $method = __METHOD__;
            return <<<HTML
/*Generated by $method*/
\$form->field(
    \$model,
    '{$attribute}',
    [
        'selectors' => [
            'input' => '#'.Html::getInputId(\$model, '$attribute') . \$caller_id,
        ]
    ]
    )
     ->widget(\\andrej2013\\yiiboilerplate\\widget\\QrInput::class, $options
     )
    ->hint(\$model->getAttributeHint('$attribute'));
HTML;
        }
    }

    public function attributeFormat($attribute)
    {
        if ($this->condition($attribute)) {
            $options = [
                'attribute' => "'$attribute'",
                'format'    => "'raw'",
                'value'     => "function (\$model) {
                    if (\$model->$attribute) {
                        return Html::img(\$model->renderQrCode('$attribute'));
                    } else {
                        return null;
                    }
                }",
            ];
            $method = __METHOD__;
            $html = $this->generator->var_export54($options);
            return <<<HTML
/*Generated by $method*/
$html
HTML;
        }
    }
    
    public function columnFormat($attribute)
    {
        
    }
}